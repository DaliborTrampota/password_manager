import 'dart:convert';
import 'package:flutter/cupertino.dart';
import 'package:hive/hive.dart';

@HiveType(typeId: 0)
class AccountEntry {
  @HiveField(0)
  String siteName;
  @HiveField(1)
  String username;
  @HiveField(2)
  String password;

  AccountEntry(this.siteName, this.username, this.password);

  factory AccountEntry.fromJson(Map<String, dynamic> jsonData) {
    return AccountEntry(jsonData['siteName'], jsonData['username'], jsonData['password']);
  }

  static Map<String, dynamic> toMap(AccountEntry data) => {'siteName': data.siteName, 'username': data.username, 'password': data.password};

  static String serialize(AccountEntry data) => json.encode(AccountEntry.toMap(data));
  static AccountEntry deserialize(String json) => AccountEntry.fromJson(jsonDecode(json));
}

class PasswordRequirements {
  final int minLength;
  final bool requireNumber;
  final bool requireSpecialChar;
  final bool requireUpperCase;

  static String specialChars = r"[.,!?:*/\\]";

  PasswordRequirements(this.minLength, this.requireNumber, this.requireSpecialChar, this.requireUpperCase);
}

typedef AccountEntryActionFunction = void Function(AccountEntry, BuildContext);
typedef ValidateFunction = String? Function(String?);

enum FormMode { create, edit }
/*class AccountEntryAdapter extends TypeAdapter<AccountEntry> {
  @override
  final typeId = 0;

  @override
  AccountEntry read(BinaryReader reader) {
    AccountEntry data = reader.read();
    return AccountEntry(data.siteName, data.username, data.password);
  }

  @override
  void write(BinaryWriter writer, AccountEntry obj) {
    writer.write(obj);
  }
}*/

//generated by hive_generator pub
class AccountEntryAdapter extends TypeAdapter<AccountEntry> {
  @override
  final int typeId = 0;

  @override
  AccountEntry read(BinaryReader reader) {
    final numOfFields = reader.readByte();
    final fields = <int, dynamic>{
      for (int i = 0; i < numOfFields; i++) reader.readByte(): reader.read(),
    };
    return AccountEntry(
      fields[0] as String,
      fields[1] as String,
      fields[2] as String,
    );
  }

  @override
  void write(BinaryWriter writer, AccountEntry obj) {
    writer
      ..writeByte(3)
      ..writeByte(0)
      ..write(obj.siteName)
      ..writeByte(1)
      ..write(obj.username)
      ..writeByte(2)
      ..write(obj.password);
  }

  @override
  int get hashCode => typeId.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) || other is AccountEntryAdapter && runtimeType == other.runtimeType && typeId == other.typeId;
}
